apiVersion: batch/v1
kind: CronJob
metadata:
  name: ocp-prometheus-datasource-updater
  namespace: grafana
spec:
  schedule: "0 */1 * * *"  # 每小時執行一次
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: grafana-editor
          containers:
          - name: prometheus-auth-token-updater
            image: docker.io/juouyang/grafana-tools:1.0.1
            env:
            - name: GRAFANA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: GRAFANA_API_KEY
            - name: GRAFANA_URL
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: GRAFANA_URL
            - name: PROMETHEUS_URL
              valueFrom:
                configMapKeyRef:
                  name: prometheus-config
                  key: PROMETHEUS_URL
            command:
            - /bin/sh
            - -c
            - |
              # 創建新的 token
              NEW_TOKEN="Bearer $(oc create token prometheus-datasource-sa -n grafana)"
              echo "New Token: $NEW_TOKEN"

              # 使用 curl 更新資料來源
              curl -sS -X PUT "$GRAFANA_URL/api/datasources/1" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $GRAFANA_API_KEY" \
                -d '{
                      "name": "Prometheus",
                      "type": "prometheus",
                      "url": "https://thanos-querier-openshift-monitoring.apps.ocp.dev.net",
                      "access": "proxy",
                      "isDefault": true,
                      "jsonData": {
                        "httpHeaderName1": "Authorization",
                        "tlsSkipVerify": true
                      },
                      "secureJsonData": {
                        "httpHeaderValue1": "'"$NEW_TOKEN"'"
                      }
                    }' | jq .

              # 檢查更新結果
              curl -sS -X GET "$GRAFANA_URL/api/datasources" -H "Authorization: Bearer $GRAFANA_API_KEY" | jq .
          restartPolicy: Never
          imagePullSecrets:
          - name: my-dockerhub-secret
